<?php

namespace BasicDashboard\Web\Notifications\Controllers;

use BasicDashboard\Web\Common\BaseController;
use BasicDashboard\Web\Notifications\Services\NotificationService;
use BasicDashboard\Web\Notifications\Validation\DeleteNotificationRequest;
use BasicDashboard\Web\Notifications\Validation\StoreNotificationRequest;
use BasicDashboard\Web\Notifications\Validation\UpdateNotificationRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

/**
 *
 * A NotificationController is responsible for receive request and return response.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class NotificationController extends BaseController
{
    public function __construct(
        private NotificationService $notificationService
    ) {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function index(Request $request): View
    {
        return $this->notificationService->index($request->all());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function create(): View
    {
        return $this->notificationService->create();
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function store(StoreNotificationRequest $request): RedirectResponse
    {
        return $this->notificationService->store($request->all());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function edit(string $id): View | RedirectResponse
    {
        return $this->notificationService->edit($id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function show(string $id): View | RedirectResponse
    {
        return $this->notificationService->show($id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function update(UpdateNotificationRequest $request, string $id): RedirectResponse
    {
        return $this->notificationService->update($request->validated(), $id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function destroy(DeleteNotificationRequest $request): RedirectResponse
    {
        return $this->notificationService->destroy($request->validated());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function sendNotification(string $id,Request $request)
    {
        return $this->notificationService->sendNotification($id,$request);
    }
}
