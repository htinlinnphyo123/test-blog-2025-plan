<?php
namespace BasicDashboard\Web\Articles\Controllers;

use BasicDashboard\Web\Articles\Jobs\UpdateArticleJob;
use BasicDashboard\Web\Articles\Services\ArticleService;
use BasicDashboard\Web\Articles\Validation\DeleteArticleRequest;
use BasicDashboard\Web\Articles\Validation\StoreArticleRequest;
use BasicDashboard\Web\Articles\Validation\UpdateArticleRequest;
use BasicDashboard\Web\Common\BaseController;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

/**
 *
 * A ArticleController is responsible for receive request and return response.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class ArticleController extends BaseController
{
    public function __construct(
        private ArticleService $articleService
    ) {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function index(Request $request): View
    {
        return $this->articleService->index($request->all());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function create(): View
    {
        return $this->articleService->create();
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function store(StoreArticleRequest $request): JsonResponse
    {
        return $this->articleService->store($request->all());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function edit(string $id): View | RedirectResponse
    {
        return $this->articleService->edit($id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function show(string $id): View | RedirectResponse
    {
        return $this->articleService->show($id);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function update(UpdateArticleRequest $request, string $id,UpdateArticleJob $updateArticleJob): JsonResponse
    {
        return $this->articleService->update($request->all(), $id,$updateArticleJob);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function destroy(DeleteArticleRequest $request): RedirectResponse
    {
        return $this->articleService->destroy($request->validated());
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function sendArticleNotification(Request $request, string $id)
    {
        return $this->articleService->sendArticleNotification($request, $id);
    }

    public function sendTelegramNotification($id)
    {
        return $this->articleService->sendTelegramNotification($id);
    }

}
