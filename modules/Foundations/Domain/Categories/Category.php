<?php

namespace BasicDashboard\Foundations\Domain\Categories;

use App\Observers\AuditObserver;
use BasicDashboard\Foundations\Domain\Articles\Article;
use BasicDashboard\Foundations\Domain\Subcategories\Subcategory;
use Illuminate\Database\Eloquent\Attributes\ObservedBy;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

/**
 *
 * A Category is gives a basic way to do that using Eloquent ORM where each table incorporates to interact with it.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */
//if you want to audit this model uncomment below code and import
#[ObservedBy([AuditObserver::class])]
class Category extends Model
{
    use HasFactory, SoftDeletes;
    //protected $table = 'table_name';
    protected $guarded = [

    ];

    public function subcategories(): HasMany
    {
        return $this->hasMany(Subcategory::class);
    }

    public function articles(): HasMany
    {
        return $this->hasMany(Article::class);
    }
}
