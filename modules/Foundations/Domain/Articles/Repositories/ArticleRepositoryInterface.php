<?php
namespace BasicDashboard\Foundations\Domain\Articles\Repositories;

use BasicDashboard\Foundations\Domain\Articles\Article;
use BasicDashboard\Foundations\Domain\Base\Repositories\BaseRepositoryInterface;
use Illuminate\Contracts\Database\Eloquent\Builder;
use Illuminate\Contracts\Pagination\LengthAwarePaginator;
use Illuminate\Database\Eloquent\Collection;

/**
 *
 * A ArticleRepositoryInterface is declaration of methods inside of Repository.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

interface ArticleRepositoryInterface extends BaseRepositoryInterface
{
    public function filterArticle(array $params): Builder | Article;
    public function getArticleList($params): LengthAwarePaginator;
    //forMobile Sections
    public function getArticles(array $params): LengthAwarePaginator;
    //increment method is implement in BaseRepository
    public function increment($id, $field, $count = 1): int;

    public function getTheMostView(int $limit = 5): Collection;
    public function getFlashNews(int $limit = 5): Collection;
    public function getBannerNews(int $limit = 10): Collection;
    public function getTopViews(int $limit = 3): Collection;
    public function getHomeArticles(int $limit = 6): Collection;
    public function getVideoArticles(int $limit = 3): Collection;
    public function getLatestArticles(int $limit = 6): Collection;
    public function getAudioArticles(int $limit = 3): Collection;
    public function getRelatedArticles(array $data, int $limit = 3): Collection;
    public function homeCategory($params): LengthAwarePaginator;
    public function getHomeData($categories, int $articleLimit = 4, int $videoLimit = 2, int $audioLimit = 2): array;
    public function getModelWithoutEncodedId(string $id) : Article|null;
}
