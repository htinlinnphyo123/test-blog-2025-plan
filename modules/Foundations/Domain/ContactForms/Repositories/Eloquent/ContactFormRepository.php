<?php

namespace BasicDashboard\Foundations\Domain\ContactForms\Repositories\Eloquent;

use BasicDashboard\Foundations\Domain\Base\Repositories\Eloquent\BaseRepository;
use BasicDashboard\Foundations\Domain\ContactForms\Repositories\ContactFormRepositoryInterface;
use BasicDashboard\Foundations\Domain\ContactForms\ContactForm;
use Illuminate\Contracts\Database\Eloquent\Builder;
use Illuminate\Pagination\LengthAwarePaginator;

/**
 *
 * A ContactFormRepository is includes extra function for implementing.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class ContactFormRepository extends BaseRepository implements ContactFormRepositoryInterface
{
    public function __construct(ContactForm $model)
    {
        parent::__construct($model);
    }

    public function filterContactForm(array $params): Builder | ContactForm
    {
        $connection = $this->connection();
        if (isset($params['keyword']) && strlen($params['keyword']) > 0) {
            $connection = $connection->where('name', 'LIKE', '%' . $params['keyword'] . '%');
        }
        return $connection;
    }

    public function getContactFormList($params): LengthAwarePaginator
    {
        return $this->filterContactForm($params)
            ->orderByRaw('CASE WHEN created_at IS NULL THEN updated_at ELSE created_at END DESC')
            ->orderBy('id', 'desc')
            ->paginate(request()->paginate ?? config('numbers.paginate'));
    }
}
