<?php

namespace BasicDashboard\Foundations\Domain\Notifications\Repositories\Eloquent;

use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Contracts\Database\Eloquent\Builder;
use BasicDashboard\Foundations\Domain\Notifications\Notification;
use BasicDashboard\Foundations\Domain\Base\Repositories\Eloquent\BaseRepository;
use BasicDashboard\Foundations\Domain\Notifications\Repositories\NotificationRepositoryInterface;

/**
 *
 * A NotificationRepository is includes extra function for implementing.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class NotificationRepository extends BaseRepository implements NotificationRepositoryInterface
{
    public function __construct(Notification $model)
    {
        parent::__construct($model);
    }

    public function filterNotification(array $params): Builder | Notification
    {
        $connection = $this->connection();
        if (isset($params['keyword']) && strlen($params['keyword']) > 0) {
            $connection = $connection->where('title', 'LIKE', '%' . $params['keyword'] . '%')
            ->orWhere('body', 'LIKE', '%' . $params['keyword'] . '%')
            ->orWhere('sending_date', 'LIKE', '%' . $params['keyword'] . '%');
        }
        return $connection;
    }

    public function getNotificationList($params): LengthAwarePaginator
    {
        return $this->filterNotification($params)
            ->orderByRaw('CASE WHEN created_at IS NULL THEN updated_at ELSE created_at END DESC')
            ->orderBy('id', 'desc')
            ->paginate(request()->paginate ?? config('numbers.paginate'));
    }

    public function getPopUpNotification() : String
    {
        $nofication = $this->model->orderByRaw('RAND()')
            ->whereNotNull('uploaded_photo')
            ->take(1)
            ->value('uploaded_photo');
        $thumbnail = $nofication ?? "/Default/default_article_pic.jpg";
        return retrievePublicFile($thumbnail);
    }

}
