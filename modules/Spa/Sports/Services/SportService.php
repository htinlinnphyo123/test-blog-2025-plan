<?php

namespace BasicDashboard\Spa\Sports\Services;

use BasicDashboard\Foundations\Domain\Sports\Repositories\SportRepositoryInterface;
use BasicDashboard\Spa\Common\BaseSpaController;
use BasicDashboard\Spa\Sports\Resources\SportResource;
use Exception;
use Illuminate\Http\JsonResponse;

/**
 *
 * A SportService is the manager of methods.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class SportService extends BaseSpaController
{

    public function __construct(
        private SportRepositoryInterface $sportRepositoryInterface,
    )
    {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function index(array $request): JsonResponse
    {
        $data = $this->sportRepositoryInterface->getSportForSPA($request);
        $data = SportResource::collection($data)->response()->getData(true);
        return $this->sendResponse("Index success", $data);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function show(string $slug): JsonResponse
    {
        $data = $this->sportRepositoryInterface->showBySlug($slug);
        if(!$data) return response()->json([
            'message' => 'Not Found',
            'code' => 404,
        ], 404);
        $data= new SportResource($data);
        $data= $data->response()->getData(true)['data'];
        return $this->sendResponse('Show success',$data);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////
}
