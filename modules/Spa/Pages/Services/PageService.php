<?php

namespace BasicDashboard\Spa\Pages\Services;

use BasicDashboard\Foundations\Domain\Categories\Repositories\CategoryRepositoryInterface;
use BasicDashboard\Foundations\Domain\Pages\Repositories\PageRepositoryInterface;
use BasicDashboard\Foundations\Domain\Settings\Repositories\SettingRepositoryInterface;
use BasicDashboard\Spa\Categories\Resources\FooterCategoryResource;
use BasicDashboard\Spa\Common\BaseSpaController;
use BasicDashboard\Spa\Pages\Resources\PageFooterResource;
use BasicDashboard\Spa\Pages\Resources\PageResource;
use BasicDashboard\Spa\Settings\Resources\SocialFooterResource;
use Exception;
use Illuminate\Http\JsonResponse;

/**
 *
 * A PageService is the manager of methods.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class PageService extends BaseSpaController
{

    public function __construct(
        private PageRepositoryInterface $pageRepositoryInterface,
        private SettingRepositoryInterface $settingRepositoryInterface,
        private CategoryRepositoryInterface $categoryRepositoryInterface
    )
    {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function index(array $request): JsonResponse
    {
        $data = $this->pageRepositoryInterface->getPageList($request);
        $data = PageResource::collection($data)->response()->getData(true);
        return $this->sendResponse("Index success", $data);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function show(): JsonResponse
    {
        $data = $this->pageRepositoryInterface->getDetailForSpa();
        $data= PageResource::collection($data);
        $data= $data->response()->getData(true)['data'];
        return $this->sendResponse('Show success',$data);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function footerIndex() :  JsonResponse
    {
        $about = $this->pageRepositoryInterface->getDetailForSpa();
        $about = PageFooterResource::collection($about)->response()->getData();

        $social = $this->settingRepositoryInterface->getSocialAcc();
        $social = SocialFooterResource::collection($social)->response()->getData();

        $category = $this->categoryRepositoryInterface->getCategoryListForSpaFooter();
        $category = FooterCategoryResource::collection($category)->response()->getData();
       
        $data = [
            'about' => $about,
            'social' => $social,
            'category' => $category
        ];

        return $this->sendResponse('Footer Success',$data);
    }
}
