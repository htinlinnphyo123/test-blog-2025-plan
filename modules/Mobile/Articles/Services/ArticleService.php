<?php

namespace BasicDashboard\Mobile\Articles\Services;

use BasicDashboard\Foundations\Domain\Articles\Repositories\ArticleRepositoryInterface;
use BasicDashboard\Foundations\Domain\Articles\Repositories\Eloquent\ArticleRepository;
use BasicDashboard\Mobile\Articles\Resources\ArticleResource;
use BasicDashboard\Mobile\Common\BaseMobileController;
use Exception;
use Illuminate\Http\JsonResponse;

/**
 *
 * A ArticleService is the manager of methods.
 * Generated By Custom Artisan Cmd
 * @author Nay Ba la
 * https://github.com/naybala
 * https://naybala.netlify.app/
 *
 */

class ArticleService extends BaseMobileController
{
    const INDEX_SUCCESS = "Index success";
    const DETAIL_SUCCESS = "Detail success";
    const ADD_COUNT_SUCCESS = "Total view count add success";

    public function __construct(
        private ArticleRepositoryInterface $articleRepository,
    ) {
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function getArticles(array $request): JsonResponse
    {
        $data = $this->articleRepository->getArticles($request);
        $data = ArticleResource::collection($data)->response()->getData(true);
        return $this->sendResponse(self::INDEX_SUCCESS, $data);
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function detail(array $request): JsonResponse
    {
        try {
            $data = $this->articleRepository->edit($request['id']);
            $data = new ArticleResource($data);
            $data = $data->response()->getData(true)['data'];
            return $this->sendResponse(self::DETAIL_SUCCESS, $data);
        } catch (Exception $e) {
            return $this->sendError($e->getMessage());
        }
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////

    public function addViewCount($id):JsonResponse
    {
        try{
            $this->articleRepository->beginTransaction();
            $count = $this->articleRepository->increment($id,'total_view_count');
            $this->articleRepository->commit();
            return $this->sendResponse(self::ADD_COUNT_SUCCESS,['count'=>$count]);
        }catch(Exception $e){
            return $this->sendError($e->getMessage());
        }
    }

    ///////////////////////////This is Method Divider///////////////////////////////////////





}
